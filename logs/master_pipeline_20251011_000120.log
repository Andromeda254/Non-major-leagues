2025-10-11 00:01:20,727 - __main__ - INFO - Master Pipeline initialized
2025-10-11 00:01:20,727 - __main__ - INFO - Using default configuration
2025-10-11 00:01:20,728 - __main__ - INFO - ================================================================================
2025-10-11 00:01:20,728 - __main__ - INFO - STARTING MULTI-MARKET BETTING PIPELINE
2025-10-11 00:01:20,728 - __main__ - INFO - ================================================================================
2025-10-11 00:01:20,728 - multi_market_integration - INFO - Initializing multi-market components
2025-10-11 00:01:20,728 - multi_market_integration - INFO - All components initialized
2025-10-11 00:01:20,728 - multi_market_integration - INFO - Running complete multi-market pipeline for E1
2025-10-11 00:01:20,728 - multi_market_integration - INFO - Phase 1: Data Collection
2025-10-11 00:01:20,728 - multi_market_integration - INFO - Collecting multi-market data for E1
2025-10-11 00:01:20,728 - non_major_league_data_collector - INFO - Collecting multi-market data for E1
2025-10-11 00:01:20,728 - non_major_league_data_collector - INFO - Collecting historical data for E1, seasons: ['2324', '2223']
2025-10-11 00:01:24,270 - non_major_league_data_collector - INFO - Collected 552 matches for E1 2324
2025-10-11 00:01:27,843 - non_major_league_data_collector - INFO - Collected 552 matches for E1 2223
2025-10-11 00:01:27,844 - non_major_league_data_collector - INFO - Validating data quality for E1
2025-10-11 00:01:27,858 - non_major_league_data_collector - INFO - Removed 0 duplicate rows
2025-10-11 00:01:27,869 - non_major_league_data_collector - WARNING - Found 634 invalid dates
2025-10-11 00:01:27,877 - non_major_league_data_collector - INFO - Found 30 unique teams
2025-10-11 00:01:27,893 - non_major_league_data_collector - INFO - Data validation complete. Final dataset: 470 matches
2025-10-11 00:01:27,893 - non_major_league_data_collector - INFO - Total historical data collected: 470 matches
2025-10-11 00:01:27,893 - non_major_league_data_collector - INFO - Enhancing with match statistics
2025-10-11 00:01:27,893 - non_major_league_data_collector - INFO - Enhancing with half-time data
2025-10-11 00:01:27,898 - non_major_league_data_collector - INFO - Enhancing with detailed statistics
2025-10-11 00:01:27,906 - non_major_league_data_collector - INFO - Multi-market data collection complete: 470 matches
2025-10-11 00:01:27,906 - multi_market_integration - INFO - Collected 470 matches with 126 features
2025-10-11 00:01:27,906 - multi_market_integration - INFO - Phase 2: Feature Engineering
2025-10-11 00:01:27,906 - multi_market_integration - INFO - Engineering multi-market features
2025-10-11 00:01:27,906 - multi_market_strategy - INFO - Creating multi-market targets
2025-10-11 00:01:27,953 - multi_market_strategy - INFO - Created 14 market targets
2025-10-11 00:01:27,954 - multi_market_strategy - INFO - Creating market-specific features
2025-10-11 00:01:28,012 - multi_market_strategy - INFO - Created market-specific features
2025-10-11 00:01:28,012 - non_major_league_feature_engineer - INFO - Starting feature engineering for 470 matches
2025-10-11 00:01:28,013 - non_major_league_feature_engineer - INFO - Creating basic features
2025-10-11 00:01:28,018 - non_major_league_feature_engineer - INFO - Creating form features
2025-10-11 00:01:35,893 - non_major_league_feature_engineer - INFO - Creating consistency features
2025-10-11 00:01:39,030 - non_major_league_feature_engineer - INFO - Creating market features
2025-10-11 00:01:39,076 - non_major_league_feature_engineer - INFO - Creating temporal features
2025-10-11 00:01:41,100 - non_major_league_feature_engineer - INFO - Creating seasonal features
2025-10-11 00:01:43,072 - non_major_league_feature_engineer - INFO - Creating fixture congestion features
2025-10-11 00:01:50,950 - non_major_league_feature_engineer - INFO - Creating temporal context features
2025-10-11 00:01:50,957 - non_major_league_feature_engineer - INFO - Creating momentum features
2025-10-11 00:01:56,079 - non_major_league_feature_engineer - INFO - Creating league position features
2025-10-11 00:01:56,332 - non_major_league_feature_engineer - INFO - Creating league-specific features
2025-10-11 00:01:56,332 - non_major_league_feature_engineer - INFO - Creating cross-league features
2025-10-11 00:01:56,333 - non_major_league_feature_engineer - INFO - Creating advanced statistical features
2025-10-11 00:01:56,342 - non_major_league_feature_engineer - INFO - Creating team embedding features
2025-10-11 00:01:56,640 - non_major_league_feature_engineer - INFO - Finalizing features
2025-10-11 00:01:56,949 - non_major_league_feature_engineer - INFO - Feature engineering complete. Final features: 286
2025-10-11 00:01:56,950 - multi_market_integration - INFO - Feature engineering complete: 286 features
2025-10-11 00:01:56,950 - multi_market_integration - INFO - Phase 3: Model Training
2025-10-11 00:01:56,950 - multi_market_integration - INFO - Training multi-market models
2025-10-11 00:01:56,950 - multi_market_model_architecture - INFO - Creating market-specific features
2025-10-11 00:01:56,960 - multi_market_model_architecture - INFO - Created features for 6 markets
2025-10-11 00:01:56,963 - multi_market_model_architecture - INFO - Training separate models
2025-10-11 00:01:56,963 - multi_market_model_architecture - INFO - Creating separate models for each market
2025-10-11 00:01:56,964 - multi_market_model_architecture - INFO - Created separate models for 10 markets
2025-10-11 00:01:56,964 - multi_market_model_architecture - INFO - Creating market ensembles
2025-10-11 00:01:56,964 - multi_market_model_architecture - INFO - Created 0 ensemble models
2025-10-11 00:01:56,964 - multi_market_model_architecture - INFO - Calibrating market models
2025-10-11 00:01:56,968 - multi_market_model_architecture - ERROR - Error calibrating match_result: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,972 - multi_market_model_architecture - ERROR - Error calibrating both_teams_score: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,975 - multi_market_model_architecture - ERROR - Error calibrating over_under_25: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,978 - multi_market_model_architecture - ERROR - Error calibrating over_under_15: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,980 - multi_market_model_architecture - ERROR - Error calibrating half_time_result: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,983 - multi_market_model_architecture - ERROR - Error calibrating double_chance: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,986 - multi_market_model_architecture - ERROR - Error calibrating correct_score: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,989 - multi_market_model_architecture - ERROR - Error calibrating clean_sheet: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,991 - multi_market_model_architecture - ERROR - Error calibrating first_goal: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,994 - multi_market_model_architecture - ERROR - Error calibrating win_to_nil: The 'estimator' parameter of CalibratedClassifierCV must be an object implementing 'fit' and 'predict_proba', an object implementing 'fit' and 'decision_function' or None. Got {'xgboost': XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.05, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=150,
              n_jobs=None, num_parallel_tree=None, ...), 'lightgbm': LGBMClassifier(learning_rate=0.05, max_depth=5, n_estimators=150,
               random_state=42, verbose=-1), 'random_forest': RandomForestClassifier(max_depth=8, random_state=42)} instead.
2025-10-11 00:01:56,994 - multi_market_integration - INFO - Multi-market model training complete
2025-10-11 00:01:56,994 - multi_market_integration - INFO - Phase 4: Making Predictions
2025-10-11 00:01:56,994 - multi_market_integration - INFO - Making multi-market predictions
2025-10-11 00:01:56,994 - multi_market_model_architecture - INFO - Creating market-specific features
2025-10-11 00:01:57,000 - multi_market_model_architecture - INFO - Created features for 6 markets
2025-10-11 00:01:57,000 - multi_market_model_architecture - INFO - Making multi-market predictions
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with match_result: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with both_teams_score: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with over_under_25: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with over_under_15: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with half_time_result: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with double_chance: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with correct_score: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with clean_sheet: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with first_goal: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - ERROR - Error predicting with win_to_nil: 'dict' object has no attribute 'predict'
2025-10-11 00:01:57,000 - multi_market_model_architecture - INFO - Calculating market correlations
2025-10-11 00:01:57,001 - multi_market_integration - INFO - Predictions made for 0 models
2025-10-11 00:01:57,001 - multi_market_integration - INFO - Phase 5: Strategy Execution
2025-10-11 00:01:57,001 - multi_market_integration - INFO - Executing multi-market strategy
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Executing multi-market strategy
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Selecting best markets
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Selected markets: ['match_result', 'both_teams_score']
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Calculating position sizes
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Optimizing portfolio weights
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Optimized weights: {'match_result': 0.625, 'both_teams_score': 0.375}
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Position sizes: {'match_result': 31.25, 'both_teams_score': 18.75}
2025-10-11 00:01:57,002 - multi_market_strategy - INFO - Multi-market strategy executed: 2 bets, 50.00 total risk
2025-10-11 00:01:57,002 - multi_market_integration - INFO - Complete multi-market pipeline executed successfully
2025-10-11 00:01:57,004 - __main__ - INFO - Multi-market pipeline completed successfully in 36.28 seconds
